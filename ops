{"author":{"id":"1199fa5e4fbcf00c9729033551d31179d9bd0ccb2bf4254d5de08ad7b107728b"},"ops":[{"type":3,"author":{"id":"1199fa5e4fbcf00c9729033551d31179d9bd0ccb2bf4254d5de08ad7b107728b"},"timestamp":1514802466,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1NDY0NjU5NA==","github-url":"https://github.com/rurban/smhasher/issues/20#issuecomment-354646594"},"nonce":"AsDc5Gfud3b1c3R4Cu+mwAJ+JUs=","message":"Granted, using tree-based-maps with O(n×log(n)) complexity, or some hybrid with O(n×log(n)) worst case, is an adequate fix. But so is making sure no attacker has adequate information to predict which inputs will cause hash collisions. Even if side-channel timing attacks can be used to identify collisions (difficult over the open internet, because there are so many other delays), with a secure hash function and secret key it will still be impossible to predict new values which cause collisions.","files":null}]}