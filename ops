{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":6,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1609356852,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0NzM2OTY0NDA="},"nonce":"XFUFH/iktGsldeAAxnqj3w96JPA=","target":"baec24bf82a91cbfada15f41104507e820ee4a9138e7ed59ec9fbae7f50874f5","message":"After more research on what I've got with PRVHASH, I've come up with a \"minimal\" implementation, which is good for table hash use. It's the smallest high-quality hash function with good security in existence I think (366 bytes in x86_64 clang 11, -O2). It passes 32..512 bit SMHasher tests (like other PRVHASH variants), but I think it should be only used for 32-bit hashes. Please include it to your test suite.\n\nhttps://github.com/avaneev/prvhash","files":null},{"type":6,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1609357770,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0NzM2OTk5OTE="},"nonce":"hg9qDJsBwdjC1kTbw8vk/nayqXU=","target":"baec24bf82a91cbfada15f41104507e820ee4a9138e7ed59ec9fbae7f50874f5","message":"After more research on what I've got with PRVHASH, I've come up with a \"minimal\" implementation, which is good for table hash use. It's the smallest high-quality hash function with good security in existence I think (355 bytes in x86_64 clang 11, -O2). It passes 32..512 bit SMHasher tests (like other PRVHASH variants), but I think it should be only used for 32-bit hashes. Please include it to your test suite.\n\nhttps://github.com/avaneev/prvhash","files":null},{"type":6,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1610215578,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0NzcxNTQ4MTk="},"nonce":"i49TWZwgomznw7yygzitJIhysc8=","target":"baec24bf82a91cbfada15f41104507e820ee4a9138e7ed59ec9fbae7f50874f5","message":"After more research on what I've got with PRVHASH, I've come up with a \"minimal\" implementation, which is good for table hash use. It's the smallest high-quality 64-bit hash function with good security in existence I think (420 bytes in x86_64 clang 11, -O2). It passes SMHasher tests. Please include it to your test suite.\n\nhttps://github.com/avaneev/prvhash","files":null}]}