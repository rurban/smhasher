{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":4,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574176188,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQyODExNzg4NTk0"},"nonce":"kFM1z2mvM2/g/oK4eQnWgqCLZvk=","status":1},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574176473,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NTU1MjkwMg==","github-url":"https://github.com/rurban/smhasher/issues/76#issuecomment-555552902"},"nonce":"+ew13RYsb6oYHVRVvhuZCMeRujw=","message":"\u003e xxh3's benchmark suite has problem. it make use of \"deep hided\" function pointers, preventing function inlining. Thus wyhash is biased to low speed/throughput. By direct calling wyhash, it is faster than xxh3 and close to FNV1A_Pippip_Yurii\n\nThat's true, still working on that. (templated hashfunc classes, branch hashapi) \nBut on the other hand wyhash switch{} benefits from compile-time known len values #85.\nBoth issues need to be fixed.\ntestall.sh completed now after 4 days, will update your v3 now.","files":null}]}