{"author":{"id":"f1e1d1abaf0eca117606d2dadc11954ec4e0f0444a4453f44f1b300f2cf3823f"},"ops":[{"type":1,"author":{"id":"f1e1d1abaf0eca117606d2dadc11954ec4e0f0444a4453f44f1b300f2cf3823f"},"timestamp":1617851508,"metadata":{"github-id":"MDU6SXNzdWU4NTMwMTQ0MjI=","github-url":"https://github.com/rurban/smhasher/issues/189","origin":"github"},"nonce":"T+rRamX1SQf59N0EktwhzKBf+m4=","title":"crc32c_pclmul_test measuring no-ops when key is aligned","message":"[`crc32c_pclmul_test`](https://github.com/rurban/smhasher/blob/d356fd967b6120ccaf0b26579710e2d9faacc70a/Hashes.h#L91-L119) in `Hashes.h` is:\n\n```c\ninline void crc32c_pclmul_test(const void *key, int len, uint32_t seed, void *out) {\n  if (!len) {\n    // Blah blah.\n    return;\n  }\n#ifdef NDEBUG\n  if (((uintptr_t)key \u0026 15) != 0) {\n    // Blah blah call crc32_pclmul_le_16.\n  }\n#else\n  assert(((uintptr_t)key \u0026 15) == 0); // input must be 16byte aligned\n  // Blah blah call crc32_pclmul_le_16.\n#endif\n}\n```\n\nBy default, `NDEBUG` is defined, which means that the `#else` path is **never taken**, which means that `crc32c_pclmul_test` is (incorrectly) **a no-op when key is 16-byte aligned**.\n\nThe \"crc32_pclmul 1972140.38 MiB/sec\" table cell in the top level `README.md` file is a mis-measurement.","files":null}]}