{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617008567,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwOTIwNjQ0Nw==","github-url":"https://github.com/rurban/smhasher/issues/99#issuecomment-809206447"},"nonce":"1O2fDtuv3KETafaQ1FTYo0UKvn8=","message":"I would at least give devs the possibilty to skip a list of bad seeds, they are getting from an initial rand. And list the hashes which are vulnerable to bad seeds (with a very low percentage indeed, 2^32 or 2^64).\n\nThis would not affect the hash performance, only the init call to reject a bad seed. Write more such seed_init() calls.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617009538,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ2OTQ0OTIz"},"nonce":"06s3wTOgxw2oilU5RY8KvSluofg=","target":"01d21f7eb21e31c1016d15f6909396d2484822e17c56e2c214c692c3def63bbe","message":"I would at least give devs the possibilty to skip a list of bad seeds, they are getting from an initial rand. And list the hashes which are vulnerable to bad seeds (with a very low percentage indeed, 2^32 or 2^64).\n\nThis would not affect the hash performance, only the init call to reject a bad seed. Write more such seed_init() calls. eg clhash skips its bad seeds in get_random_key_for_clhash()","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617009549,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ2OTQ1MDAz"},"nonce":"B8Uj1t81oqWpHlbjiVzSPkVW5f8=","target":"01d21f7eb21e31c1016d15f6909396d2484822e17c56e2c214c692c3def63bbe","message":"I would at least give devs the possibilty to skip a list of bad seeds, they are getting from an initial rand. And list the hashes which are vulnerable to bad seeds (with a very low percentage indeed, 2^32 or 2^64).\n\nThis would not affect the hash performance, only the init call to reject a bad seed. Write more such seed_init() calls. eg clhash skips its bad seeds in `get_random_key_for_clhash()`","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617009572,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ2OTQ1MTY3"},"nonce":"Tv4ZEX7p4b3JEi1NopdPgv2Hp98=","target":"01d21f7eb21e31c1016d15f6909396d2484822e17c56e2c214c692c3def63bbe","message":"I would at least give devs the possibilty to skip a list of bad seeds, they are getting from an initial rand. And list the hashes which are vulnerable to bad seeds (with a very low percentage indeed, 2^32 or 2^64).\n\nThis would not affect the hash performance, only the init call needs to reject a bad seed. Write more such seed_init() calls. eg clhash skips its bad seeds in `get_random_key_for_clhash()`","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617009999,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ2OTQ3Mzk3"},"nonce":"sBWNzZ2fF4vF+w/kwVTuvtXwLvM=","target":"01d21f7eb21e31c1016d15f6909396d2484822e17c56e2c214c692c3def63bbe","message":"I would at least give devs the possibilty to skip a list of bad seeds, they are getting from an initial rand. And list the hashes which are vulnerable to bad seeds (with a very low percentage indeed, 2^32 or 2^64).\n\nThis would not affect the hash performance, only the init call needs to reject a bad seed. Write more such seed_init() calls. \n\neg clhash skips its bad seeds in `get_random_key_for_clhash()`, but fails to check if the two seed arguments are non-zero, initializing xorshift128plus_init with bad values.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617023471,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ3MDA2MTk4"},"nonce":"Dm1B3mD8xprXHRMD3ezyFXwwoic=","target":"01d21f7eb21e31c1016d15f6909396d2484822e17c56e2c214c692c3def63bbe","message":"I would at least give devs the possibilty to skip a list of bad seeds, they are getting from an initial rand. And list the hashes which are vulnerable to bad seeds (with a very low percentage indeed, 1-2 of 2^32 or 2^64).\n\nThis would not affect the hash performance, only the init call needs to reject a bad seed. Write more such seed_init() calls. \n\neg clhash skips its bad seeds in `get_random_key_for_clhash()`, but fails to check if the two seed arguments are non-zero, initializing xorshift128plus_init with bad values.","files":null},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617032558,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwOTQ4NTY2NA==","github-url":"https://github.com/rurban/smhasher/issues/99#issuecomment-809485664"},"nonce":"xRKz+3ZAahylOqIaZ0EuOBcQ9HI=","message":"I called the new test **BadSeeds**, and will add the list of bad seeds to the static HashInfo list in main.cpp.\n\nwyhash32 has eg {0x1bc1d52e, 0x1cbc261d, 0x33a0d1d9, 0x429dacdd, 0xd637dbf3}\nwyhash64 has   { 0xa0761d6478bd642f, 0xe7037ed1a0b428db }","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617032610,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ3MDYxNDI1"},"nonce":"AYNizVDMJ4WYu8lgGxt2Eg6zA6M=","target":"148bca1423b5236fad7adf807b1162df3b743807e033acd9f66636245e259703","message":"I called the new test **BadSeeds**, and will add the list of bad seeds to the static HashInfo list in main.cpp.\n\nwyhash32 has eg {0x1bc1d52e, 0x1cbc261d, 0x33a0d1d9, 0x429dacdd, 0xd637dbf3}\nwyhash64 has   { 0xa0761d6478bd642f, 0xe7037ed1a0b428db }\nclhash { 0 } as many others","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1617032646,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ3MDYxNjI2"},"nonce":"lOdvD5BNVNVpc4zFh9RrRaTduV8=","target":"148bca1423b5236fad7adf807b1162df3b743807e033acd9f66636245e259703","message":"I called the new test **BadSeeds**, and will add the list of bad seeds to the static HashInfo list in main.cpp.\n\nwyhash32 has eg {0x1bc1d52e, 0x1cbc261d, 0x33a0d1d9, 0x429dacdd, 0xd637dbf3}\nwyhash64 has   { 0xa0761d6478bd642f, 0xe7037ed1a0b428db }\nclhash { 0 } as many others\n\nwaiting for confirmation will need a few days of CPU","files":null}]}