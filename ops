{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":1,"timestamp":1638125760,"metadata":{"github-id":"I_kwDOARWYbc4_gNX0","github-url":"https://github.com/rurban/smhasher/issues/217","origin":"github"},"nonce":"KwcZehVGJ66CKrTCS667IBO2FJA=","title":"New test: hash function branching","message":"I think this may be a useful test. Many hash functions use different \"paths\" when handling various hash lengths. This test tries to catch collisions between these \"paths\", plus it's at the same time an additional \"zeroes\"-like test.\n\n```\nuint64_t msg[ 16 ] = { 0 };\n\nfor( int k = 0; k \u003c 80000; k++ )\n{\n\tmsg[ 0 ]++;\n\n\tfor( int i = 8; i \u003c= 128; i++ )\n\t{\n\t\th = hash( (uint8_t*) \u0026msg, i, seed );\n\t}\n}\n```","files":null}]}