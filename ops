{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":1,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1598118138,"metadata":{"github-id":"MDU6SXNzdWU2ODQwMzUzMjg=","github-url":"https://github.com/rurban/smhasher/issues/144","origin":"github"},"nonce":"wG408C3u+Jg5yka8Id7PFRj6lQ8=","title":"PRVHASH 2.14","message":"This version does not change the function in `prvhash42` - only its parameters. But this version implements a streamed hashing functions `prvhash42s`, it has 130% faster raw speed. The speed and security boost is substantial with this function, the amount of entropy mixing happening is unbelievable. I think this is better than SHA256 in every aspect (20 times faster, irreversible).\n\nHere's an example now to pass seed to it. (it actually accepts 4x 64-bit seeds).\n```\nPRVHASH42S_CTX ctx;\nuint64_t seedb[ 4 ] = { seed, seed, seed, seed };\nprvhash42s_init( \u0026ctx, (uint8_t*) out, 4, seedb, 0 );\nprvhash42s_update( \u0026ctx, (uint8_t*) out, (const uint8_t*) key, len );\nprvhash42s_final( \u0026ctx, (uint8_t*) out );\n```","files":null}]}