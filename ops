{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574001914,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NDc1MjMyOA==","github-url":"https://github.com/rurban/smhasher/issues/82#issuecomment-554752328"},"nonce":"OR3b4Db4rNPJM4EUM8LjSuKIOTU=","message":"I'm more leaning to https://github.com/greg7mdp/parallel-hashmap, \nan improved abseil/swisstable variant, an open-addressing header-only C++ hashtable with quadratic probing. But it does it's own mixing for bad hash functions. Maybe disable that.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574071124,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxMDY1MDkxNQ=="},"nonce":"/hvVK9UnZk9APAk9DnXuygFaeRY=","target":"fa494b57cdea82296b415975605aadcfa7ceb33b8be07527b9545212b4d964f3","message":"I'm more leaning to https://github.com/greg7mdp/parallel-hashmap, \nan improved abseil/swisstable variant, an open-addressing header-only C++ hashtable with quadratic probing. But it does it's own mixing for bad hash functions. Maybe disable that.\n\nI'm not so sure our tested hashfuncs are actually inlined with the current HashMapTest. Definitely need to be templated with a new pfhash classes, and not via std:function indirect calls.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574071137,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxMDY1MTA0Ng=="},"nonce":"tiAMi99P6j9jxC3s4fK48ZpNJ8o=","target":"fa494b57cdea82296b415975605aadcfa7ceb33b8be07527b9545212b4d964f3","message":"I'm more leaning to https://github.com/greg7mdp/parallel-hashmap, \nan improved abseil/swisstable variant, an open-addressing header-only C++ hashtable with quadratic probing. But it does it's own mixing for bad hash functions. Maybe disable that.\n\nI'm not so sure our tested hashfuncs are actually inlined with the current HashMapTest. Definitely need to be templated with new pfhash classes, and not via std:function indirect calls.","files":null}]}