{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":6,"timestamp":1638239433,"metadata":{"github-id":"UCE_lAHOARWYbc4_lMUezib_Wf4"},"nonce":"7zi/7q3zyd62tpQJp0gDrO+slNY=","target":"b0f2ceabc78d92c7a50abc16273400628bd0e5dfe844802c63cf3b04d21cded6","message":"It breaks both `wyhash` and `XXH3_64`, unfortunately.\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 9;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 3;\n\tconst int ocount = 4;\n\tconst int lcount = 6;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing );\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing );\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 8;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tocount * lcount;\n```","files":null},{"type":6,"timestamp":1638248528,"metadata":{"github-id":"UCE_lAHOARWYbc4_lMUezicAoKs"},"nonce":"+jnTAD4xX6Yeu24VmTbA2sfNlTA=","target":"b0f2ceabc78d92c7a50abc16273400628bd0e5dfe844802c63cf3b04d21cded6","message":"It breaks both `wyhash` and `XXH3_64`, unfortunately.\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 6;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing );\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing );\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 8;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tocount * lcount;\n```","files":null},{"type":6,"timestamp":1638249665,"metadata":{"github-id":"UCE_lAHOARWYbc4_lMUezicAxJU"},"nonce":"aJ5ANTqy2LKF44ABaEYqCcWNuPs=","target":"b0f2ceabc78d92c7a50abc16273400628bd0e5dfe844802c63cf3b04d21cded6","message":"It breaks both `wyhash` and `XXH3_64`, unfortunately.\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 12;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing );\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing );\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 4;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tocount * lcount;\n```","files":null},{"type":6,"timestamp":1638273575,"metadata":{"github-id":"UCE_lAHOARWYbc4_lMUezicFGlg"},"nonce":"fnXr/ot3KuLl9aazPgNMq4y884U=","target":"b0f2ceabc78d92c7a50abc16273400628bd0e5dfe844802c63cf3b04d21cded6","message":"It breaks both `wyhash` and `XXH3_64`, unfortunately.\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 24;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing );\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing );\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 2;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tocount * lcount;\n```","files":null},{"type":3,"timestamp":1638263106,"metadata":{"github-id":"IC_kwDOARWYbc46jqC9","github-url":"https://github.com/rurban/smhasher/issues/218#issuecomment-982425789"},"nonce":"SutIrvVZd2eJhTbcP7fXkNwIkHI=","message":"Just to put this into perspective, `komihash`, `prvhash`, and `farmhash64` do pass this test.","files":null},{"type":6,"timestamp":1638263780,"metadata":{"github-id":"UCE_lALOARWYbc46jqC9zh9DXqI"},"nonce":"SS/JcB2mYDy9YZpzxpDciK6zuMI=","target":"08d3ca574d34195a84b9f1404667752262ac36fcfd0affb77a83b116cec82184","message":"Just to put this into perspective, `komihash`, `prvhash`, `mx3`, and `farmhash64` do pass this test.","files":null},{"type":3,"timestamp":1638274426,"metadata":{"github-id":"IC_kwDOARWYbc46kPjK","github-url":"https://github.com/rurban/smhasher/issues/218#issuecomment-982579402"},"nonce":"qCQZUlRfGX6Sb4EfnGkIykwDfNc=","message":"Oh, wow, this variant also breaks `mx3`:\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 24;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\tfor( int ps = 0; ps \u003c pnspacing; ps++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 2;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tpnspacing * ocount * lcount;\n```","files":null},{"type":6,"timestamp":1638274952,"metadata":{"github-id":"UCE_lALOARWYbc46kPjKzh9EeXk"},"nonce":"A6CxM+t9TL071ZeLmybZ8SSHEpM=","target":"96e3de1bdc2d266668295a9990ccc30c80be3cfa2fedfb7921de83206adc4e2b","message":"Oh, wow, this variant also breaks `mx3`:\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 6;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\tfor( int ps = 0; ps \u003c pnspacing; ps++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 2;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tpnspacing * ocount * lcount;\n```","files":null},{"type":6,"timestamp":1638274986,"metadata":{"github-id":"UCE_lALOARWYbc46kPjKzh9Eelk"},"nonce":"d8xySyoOIzyvgyIIpYhydQfZNf4=","target":"96e3de1bdc2d266668295a9990ccc30c80be3cfa2fedfb7921de83206adc4e2b","message":"Oh, wow, this variant also breaks `mx3`:\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 6;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\tfor( int ps = 0; ps \u003c pnspacing; ps++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 4;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tpnspacing * ocount * lcount;\n```","files":null},{"type":6,"timestamp":1638275002,"metadata":{"github-id":"UCE_lALOARWYbc46kPjKzh9EerQ"},"nonce":"3lFXt8IDoM8WxnpZzOMYCFvnoJE=","target":"96e3de1bdc2d266668295a9990ccc30c80be3cfa2fedfb7921de83206adc4e2b","message":"Oh, wow, this variant also breaks `mx3`:\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 6;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\tfor( int ps = 0; ps \u003c pnspacing; ps++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 2;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tpnspacing * ocount * lcount;\n```","files":null},{"type":6,"timestamp":1638275039,"metadata":{"github-id":"UCE_lALOARWYbc46kPjKzh9Ee40"},"nonce":"yWwSAYVYgzkFaa/w95hVpvNobe8=","target":"96e3de1bdc2d266668295a9990ccc30c80be3cfa2fedfb7921de83206adc4e2b","message":"Oh, wow, this variant also breaks `mx3`:\n\n```\nstatic inline uint64_t pn_expand_val( const uint64_t v, const int vsize,\n\tconst int spacing )\n{\n\tuint64_t r = 0;\n\tint p = 0;\n\n\tfor( int i = 0; i \u003c vsize; i++ )\n\t{\n\t\tr |= (( v \u003e\u003e i ) \u0026 1 ) \u003c\u003c p;\n\t\tp += spacing;\n\t}\n\n\treturn( r );\n}\n\n{\n\tconst int pnbits = 7;\n\tconst int pncount = 1 \u003c\u003c pnbits;\n\tconst int pnspacing = 4;\n\tconst int ocount = 4;\n\tconst int lcount = 12;\n\tuint8_t msg[ 64 ];\n\n\tfor( int i = 1; i \u003c pncount; i++ )\n\t{\n\tfor( int ps = 0; ps \u003c pnspacing; ps++ )\n\t{\n\t\tuint32_t seed = (uint32_t) pn_expand_val( i, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\tfor( int k = 1; k \u003c pncount; k++ )\n\t\t{\n\t\t\tuint32_t key = (uint32_t) pn_expand_val( k, pnbits, pnspacing ) \u003c\u003c ps;\n\n\t\t\tfor( int o = 0; o \u003c ocount; o++ )\n\t\t\t{\n\t\t\t\tmemset( msg, 0, sizeof( msg ));\n\t\t\t\tmemcpy( msg + o * 4, \u0026key, sizeof( key ));\n\n\t\t\t\tfor( int l = 0; l \u003c lcount; l++ )\n\t\t\t\t{\n\t\t\t\t\tconst size_t msgl = 16 + l * 2;\n\t\t\t\t\th = hash( \u0026msg, msgl, seed );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t}\n\n\tconst double tot = (uint64_t) ( pncount - 1 ) * ( pncount - 1 ) *\n\t\tpnspacing * ocount * lcount;\n```","files":null}]}