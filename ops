{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1553255800,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE5OTg1MTg3MQ=="},"nonce":"gwPvlLrwiXlQpDKVdc9cx7hJ4Vc=","target":"b2143f8eef7cb78abea55e07ba243a2d11c04f40d5ec39b328bbc596439f54c0","message":"```\nvoid MomentTest ( pfHash hash){\n\tprintf(\"Running MomentTest...\\n\");\n\tunsigned\tk=0,\ts=0;\n\tunsigned long long l,\th,\tx;\n\tlong double sa=0,\tsaa=0,\tsb=0,\tsbb=0,\tn=0xffffffffull;\n\thash(\u0026k,4,s,\u0026l);\tfor(unsigned\ti=1;\ti\u003e0;\ti++){\thash(\u0026i,4,s,\u0026h);\tx=__builtin_popcountll(l^h);\tx=x*x*x*x*x;\tsa+=x;\tsaa+=x*x;\tl=h;\t}\n\thash(\u0026k,4,s,\u0026l);\tfor(unsigned\ti=1;\ti\u003e0;\ti++){\thash(\u0026k,4,i,\u0026h);\tx=__builtin_popcountll(l^h);\tx=x*x*x*x*x;\tsb+=x;\tsbb+=x*x;\tl=h;\t}\n\tsa/=n;\tsaa=(saa/n-sa*sa)/n;\tsb/=n;\tsbb=(sbb/n-sb*sb)/n;\tdouble\tchi2=(sa-sb)*(sa-sb)/(saa+sbb);\n\tprintf(\"KeySeedMomentChi2:\\t%g\\t%s\\n\",\tchi2,\tchi2\u003e3.84145882069413?\"FAIL!!!!\":\"PASS\");\n}\n```\n64bit hash chisq:\nt1ha2_atonce\t0.0170684\tPASS\nwyhash\t0.0347747\tPASS\nxxHash64\t0.145062\tPASS\nMUM\t0.589962\tPASS\nfarmhash64_c\t1.05341\tPASS\nSipHash\t2.38213\tPASS\n(c)metrohash64_2\t3.43323\tPASS\nSpooky64\t14.5622\tFAIL\n(c)metrohash64_1\t674.801\tFAIL\nfasthash64\t15556.8\tFAIL\nxxh3\t117826\tFAIL\n\n32bit hash chisq:\nGoodOAAT\t0.00156549\tPASS\nMUMlow:\t0.0022278\tPASS\nCity32\t0.0325398\tPASS\nwyhash32low\t0.0465943\tPASS\nfasthash32\t1.7319\tPASS\nCity64low\t4.3816\tFAIL\nSpooky32\t34.9565\tFAIL\nxxHash32\t344.586\tFAIL\nMurmur3A\t97936.1\tFAIL\n\nwyhash have been updated accord to this new finding :-)","files":null},{"type":5,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1553255864,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIyMjI0MTUzMzM="},"nonce":"QkFalvavgclo4UsfG0yIS7UKi+U=","added":["enhancement"],"removed":[]},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1553264781,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ3NTY0MTI3NQ==","github-url":"https://github.com/rurban/smhasher/issues/65#issuecomment-475641275"},"nonce":"nDoL2dgU7LY3pJ25iZFN7wct9nk=","message":"Thanks, that's the ultimate test, just extremely slow iterating 2x over the complete keyset. How small can we make the iterations to still get the same confidence?  I think at least a tenth should be good enough.","files":null},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1553275348,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ3NTcwNzE5Mw==","github-url":"https://github.com/rurban/smhasher/issues/65#issuecomment-475707193"},"nonce":"a07ZHxD3RTjZ7fddiyYrwEsRJVs=","message":"Merged with a236cd24b49a9da08b882b952839f4e8c5a012de","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1553275426,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE5OTk5OTg3MA=="},"nonce":"oWw4SrxZoYtXMXVcp8ximiPhw+I=","target":"0f2591136bf1839b2576f52240126d34e8fa6daf15a33c8c0e92680c6a9b8bab","message":"Merged with cc8141a0b8910e757b64cfad38dac97dcc575083","files":null},{"type":4,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1553275349,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjIyMzMwMjA5MQ=="},"nonce":"Y73FEbMSGWWzLeYtNoEFS40NGFY=","status":2}]}