{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":1,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1600970764,"metadata":{"github-id":"MDU6SXNzdWU3MDgzNzIzNTE=","github-url":"https://github.com/rurban/smhasher/issues/166","origin":"github"},"nonce":"GCcUcTRmu9ONdgbzYHRdUd8EiJI=","title":"PRVHASH 2.24","message":"Well, now I'm completely satisfied with the hash function, it's now structurally optimal and scales to any variable size - I even have 16-bit variable based hash function which works identically. PRNG is beyond expectations, its period scales with the number of hash words almost exponentially (so, each 32-bit hash word in the system increases period by about 2^32). And more importantly, multiplications by zero are now structurally impossible, so the PRNG does not lose entropy at all.\n\nIn comparsion to version 2.22, the Hash buffer now should not have twice the hash size. Works like before that version, fully \"inplace\". `prvhash42( (const uint8_t*) key, len, (uint8_t*) out, 8, seed, 0 );`\n\nhttps://github.com/avaneev/prvhash","files":null}]}