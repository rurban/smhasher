{"author":{"id":"0be85370cf8c6082f21359a4f62aee30872ea5faa63815d645708ce85f526fee"},"ops":[{"type":3,"author":{"id":"0be85370cf8c6082f21359a4f62aee30872ea5faa63815d645708ce85f526fee"},"timestamp":1498971528,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMxMjQ3MTAzNA==","github-url":"https://github.com/rurban/smhasher/issues/32#issuecomment-312471034"},"nonce":"7amQgg6fh2AUezSEe8+EYDuXe38=","message":"As an example of some of the modified output I'm thinking about, here are some updated speed tests. The bulk speed tests explicitly check different buffer sizes to see if data size \u003e different L1, L2, L3 cache sizes matter. I also started to produce bytes/cycle, cycle/bytes, and MiB/sec throughput numbers for small key speed tests.\n\nHere is an example of City64 showing the effects of key size on throughput for big keys, and the changes to the small keys (note that the average on the small keys is still for 1-31 byte keys, inclusive, to keep the same metric):\n\n```\n$ build/SMHasher --test=Speed City64\n-------------------------------------------------------------------------------\n--- Testing City64 \"Google CityHash64WithSeed (old)\"\n\n[[[ Speed Tests ]]]\n\nBulk speed test - 67108864-byte keys\n 7 -  2.394 bytes/cycle - 7535.56 MiB/sec @ 3 ghz\n 6 -  2.395 bytes/cycle - 7538.87 MiB/sec @ 3 ghz\n 5 -  2.392 bytes/cycle - 7526.38 MiB/sec @ 3 ghz\n 4 -  2.394 bytes/cycle - 7533.35 MiB/sec @ 3 ghz\n 3 -  2.390 bytes/cycle - 7521.96 MiB/sec @ 3 ghz\n 2 -  2.384 bytes/cycle - 7503.57 MiB/sec @ 3 ghz\n 1 -  2.396 bytes/cycle - 7540.32 MiB/sec @ 3 ghz\n 0 -  2.498 bytes/cycle - 7862.92 MiB/sec @ 3 ghz\nAverage      -  2.405 bytes/cycle - 7570.37 MiB/sec @ 3 ghz\nBulk speed test - 4194304-byte keys\n 7 -  2.380 bytes/cycle - 7491.71 MiB/sec @ 3 ghz\n 6 -  2.393 bytes/cycle - 7531.12 MiB/sec @ 3 ghz\n 5 -  2.394 bytes/cycle - 7534.83 MiB/sec @ 3 ghz\n 4 -  2.394 bytes/cycle - 7534.90 MiB/sec @ 3 ghz\n 3 -  2.390 bytes/cycle - 7520.97 MiB/sec @ 3 ghz\n 2 -  2.391 bytes/cycle - 7523.96 MiB/sec @ 3 ghz\n 1 -  2.390 bytes/cycle - 7520.44 MiB/sec @ 3 ghz\n 0 -  2.498 bytes/cycle - 7862.95 MiB/sec @ 3 ghz\nAverage      -  2.404 bytes/cycle - 7565.11 MiB/sec @ 3 ghz\nBulk speed test - 262144-byte keys\n 7 -  3.070 bytes/cycle - 9660.87 MiB/sec @ 3 ghz\n 6 -  3.066 bytes/cycle - 9648.22 MiB/sec @ 3 ghz\n 5 -  3.066 bytes/cycle - 9648.22 MiB/sec @ 3 ghz\n 4 -  3.070 bytes/cycle - 9662.23 MiB/sec @ 3 ghz\n 3 -  3.070 bytes/cycle - 9661.78 MiB/sec @ 3 ghz\n 2 -  3.066 bytes/cycle - 9648.67 MiB/sec @ 3 ghz\n 1 -  3.068 bytes/cycle - 9655.90 MiB/sec @ 3 ghz\n 0 -  3.116 bytes/cycle - 9807.88 MiB/sec @ 3 ghz\nAverage      -  3.074 bytes/cycle - 9674.22 MiB/sec @ 3 ghz\nBulk speed test - 16384-byte keys\n 7 -  3.087 bytes/cycle - 9714.11 MiB/sec @ 3 ghz\n 6 -  3.082 bytes/cycle - 9699.49 MiB/sec @ 3 ghz\n 5 -  3.080 bytes/cycle - 9692.20 MiB/sec @ 3 ghz\n 4 -  3.077 bytes/cycle - 9684.92 MiB/sec @ 3 ghz\n 3 -  3.077 bytes/cycle - 9684.92 MiB/sec @ 3 ghz\n 2 -  3.073 bytes/cycle - 9670.39 MiB/sec @ 3 ghz\n 1 -  3.082 bytes/cycle - 9699.49 MiB/sec @ 3 ghz\n 0 -  3.141 bytes/cycle - 9885.45 MiB/sec @ 3 ghz\nAverage      -  3.087 bytes/cycle - 9716.37 MiB/sec @ 3 ghz\nBulk speed test - 1024-byte keys\n 7 -  2.695 bytes/cycle - 8480.67 MiB/sec @ 3 ghz\n 6 -  2.695 bytes/cycle - 8480.67 MiB/sec @ 3 ghz\n 5 -  1.969 bytes/cycle - 6197.42 MiB/sec @ 3 ghz\n 4 -  2.667 bytes/cycle - 8392.33 MiB/sec @ 3 ghz\n 3 -  2.246 bytes/cycle - 7067.23 MiB/sec @ 3 ghz\n 2 -  2.098 bytes/cycle - 6603.80 MiB/sec @ 3 ghz\n 1 -  2.327 bytes/cycle - 7324.22 MiB/sec @ 3 ghz\n 0 -  2.133 bytes/cycle - 6713.87 MiB/sec @ 3 ghz\nAverage      -  2.354 bytes/cycle - 7407.53 MiB/sec @ 3 ghz\n\nSmall key speed tests\n   0-bytes  32.00 cyc/ha 0.000 b/c  32.000 c/b -    0.00 MiB/sec\n   1-bytes  32.00 cyc/ha 0.031 b/c  32.000 c/b -   98.35 MiB/sec\n   2-bytes  36.00 cyc/ha 0.056 b/c  18.000 c/b -  174.84 MiB/sec\n   3-bytes  32.00 cyc/ha 0.094 b/c  10.667 c/b -  295.04 MiB/sec\n   4-bytes  32.00 cyc/ha 0.125 b/c   8.000 c/b -  393.39 MiB/sec\n   5-bytes  32.00 cyc/ha 0.156 b/c   6.400 c/b -  491.74 MiB/sec\n   6-bytes  32.00 cyc/ha 0.188 b/c   5.333 c/b -  590.09 MiB/sec\n   7-bytes  32.00 cyc/ha 0.219 b/c   4.571 c/b -  688.43 MiB/sec\n   8-bytes  32.00 cyc/ha 0.250 b/c   4.000 c/b -  786.78 MiB/sec\n   9-bytes  32.00 cyc/ha 0.281 b/c   3.556 c/b -  885.13 MiB/sec\n  10-bytes  32.00 cyc/ha 0.312 b/c   3.200 c/b -  983.48 MiB/sec\n  11-bytes  32.00 cyc/ha 0.344 b/c   2.909 c/b - 1081.82 MiB/sec\n  12-bytes  32.00 cyc/ha 0.375 b/c   2.667 c/b - 1180.17 MiB/sec\n  13-bytes  32.00 cyc/ha 0.406 b/c   2.462 c/b - 1278.52 MiB/sec\n  14-bytes  32.00 cyc/ha 0.438 b/c   2.286 c/b - 1376.87 MiB/sec\n  15-bytes  32.00 cyc/ha 0.469 b/c   2.133 c/b - 1475.21 MiB/sec\n  16-bytes  32.00 cyc/ha 0.500 b/c   2.000 c/b - 1573.56 MiB/sec\n  17-bytes  32.00 cyc/ha 0.531 b/c   1.882 c/b - 1671.91 MiB/sec\n  18-bytes  32.00 cyc/ha 0.562 b/c   1.778 c/b - 1770.26 MiB/sec\n  19-bytes  32.00 cyc/ha 0.594 b/c   1.684 c/b - 1868.61 MiB/sec\n  20-bytes  32.00 cyc/ha 0.625 b/c   1.600 c/b - 1966.95 MiB/sec\n  21-bytes  36.00 cyc/ha 0.583 b/c   1.714 c/b - 1835.82 MiB/sec\n  22-bytes  36.00 cyc/ha 0.611 b/c   1.636 c/b - 1923.24 MiB/sec\n  23-bytes  32.00 cyc/ha 0.719 b/c   1.391 c/b - 2262.00 MiB/sec\n  24-bytes  32.00 cyc/ha 0.750 b/c   1.333 c/b - 2360.34 MiB/sec\n  25-bytes  36.00 cyc/ha 0.694 b/c   1.440 c/b - 2185.50 MiB/sec\n  26-bytes  36.00 cyc/ha 0.722 b/c   1.385 c/b - 2272.92 MiB/sec\n  27-bytes  32.00 cyc/ha 0.844 b/c   1.185 c/b - 2655.39 MiB/sec\n  28-bytes  32.00 cyc/ha 0.875 b/c   1.143 c/b - 2753.73 MiB/sec\n  29-bytes  32.00 cyc/ha 0.906 b/c   1.103 c/b - 2852.08 MiB/sec\n  30-bytes  32.00 cyc/ha 0.938 b/c   1.067 c/b - 2950.43 MiB/sec\n  31-bytes  32.00 cyc/ha 0.969 b/c   1.032 c/b - 3048.78 MiB/sec\n  32-bytes  32.00 cyc/ha 1.000 b/c   1.000 c/b - 3147.13 MiB/sec\n  36-bytes  40.00 cyc/ha 0.900 b/c   1.111 c/b - 2832.41 MiB/sec\n  40-bytes  40.00 cyc/ha 1.000 b/c   1.000 c/b - 3147.13 MiB/sec\n  48-bytes  40.00 cyc/ha 1.200 b/c   0.833 c/b - 3776.55 MiB/sec\n  56-bytes  40.00 cyc/ha 1.400 b/c   0.714 c/b - 4405.98 MiB/sec\n  60-bytes  40.00 cyc/ha 1.500 b/c   0.667 c/b - 4720.69 MiB/sec\n  61-bytes  40.00 cyc/ha 1.525 b/c   0.656 c/b - 4799.37 MiB/sec\n  62-bytes  40.00 cyc/ha 1.550 b/c   0.645 c/b - 4878.04 MiB/sec\n  63-bytes  40.00 cyc/ha 1.575 b/c   0.635 c/b - 4956.72 MiB/sec\n  64-bytes  40.00 cyc/ha 1.600 b/c   0.625 c/b - 5035.40 MiB/sec\nAverage                                    32.645 cycles/hash\n\n\nInput vcode 0x00000001, Output vcode 0x00000001, Result vcode 0x00000001\nVerification value is 0x00000001 - Testing took 2.692119 seconds\n-------------------------------------------------------------------------------\n```\n\nThese are numbers from my i3-2120 as an example (I've mangled the internal constant to 3.3ghz, even if they aren't reflected in the text above; still working on CPU scaling integration), I would expect better CPUs to do better ;)","files":null}]}