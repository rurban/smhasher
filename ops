{"author":{"id":"858a49e4dd6ce99467ce4ab87a028ebdcb8a0c31101a72fe47695510d4becb6f"},"ops":[{"type":3,"author":{"id":"858a49e4dd6ce99467ce4ab87a028ebdcb8a0c31101a72fe47695510d4becb6f"},"timestamp":1599222809,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY4NzExNDgxMQ==","github-url":"https://github.com/rurban/smhasher/issues/51#issuecomment-687114811"},"nonce":"gctIcGtgNMhsA2CSkUhzp0Ty59Q=","message":"If you hash (x,y) as `h(x)+h'(y)` where `h` and `h'` are each 2-independent/universal and independent of each other, then the result is a 2-independent hash of `(x,y)`.\nYou don't need any \"non-linearity\" properties.\nIf `h` and `h'` are the same hash function, no properties can save you from `h(x)+h(x)=2h(x)`.\n\nI guess this all depends on what properties you want from your hash function.\nFor crypto, I'm sure linearity isn't great.\nFor algorithms having a collision-resistant hash function, that's also linear, can be a great thing.\n\nI like that about smhasher, one can get a quick overview of which functions satisfy which properties, and pick the one that suits their use-case. Just don't pretend like all of these \"properties\" are necessarily a bad thing to always be avoided.","files":null}]}