{"author":{"id":"433a587e6fdf78d5b73867ab95e62cd5f579a1275907add7a65d42d9ee2e7bc2"},"ops":[{"type":3,"author":{"id":"433a587e6fdf78d5b73867ab95e62cd5f579a1275907add7a65d42d9ee2e7bc2"},"timestamp":1585669313,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNjcwNjQ4Nw==","github-url":"https://github.com/rurban/smhasher/issues/114#issuecomment-606706487"},"nonce":"TSeEMd2S+8N7L46Ayj7FONLowk8=","message":"@NoHatCoder great explanation. Thank you.","files":null},{"type":3,"author":{"id":"433a587e6fdf78d5b73867ab95e62cd5f579a1275907add7a65d42d9ee2e7bc2"},"timestamp":1585805862,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNzYzMTgzMA==","github-url":"https://github.com/rurban/smhasher/issues/114#issuecomment-607631830"},"nonce":"8CecOIfp9Od0ce864KirazikIbI=","message":"@NoHatCoder but I still have no idea what you're talking about with the dice.\n\nSo from the dice example, E(2 sixes) = 1/3\n\nSo if you make 100 such roles, you expect to get ~ 33 events of two sixes. Is that right?\n\nSwitching to the hash example, E(sparse test collision) = ~ 1/3\n\nSo if you make 100 ideal hashes, you expect to get ~ 30 collision events. \n\nYou're saying probability of getting a collision in this test is too high to make this test a useful signal of failure, is that right?\n\nYou're also saying that probability is 7.2%, is that right?\n\nIf that's the case, I think I get your position, I'm just wondering about it with regards to the following.\n\nFor the 7.2% claim, I thought the test fails with 1 collision so, in that case it would fail 30% of the time. But even if it fails with 2 or more collisions, I don't get the need to use Poisson distribution. Can you not say that E(c) = ~ 0.3 so E(2c) = ~ 0.09 ?\n\nFor the first claim, perhaps the idea behind this test is that sparse keys represent some greater vulnerability by being comparatively easier to search for, so hash functions, in order to be more secure, need to have some special case handling of sparse keys to prevent collision.\n\nIn that case, if you handle sparse keys like I suggest (and how I got my hashes to reliably pass these tests), I believe (tho I'm not certain) you're able to better handle the potential vulnerability that sparse keys represent.\n\nI'm not saying the sparse keyset tests are perfect, just wondering what do you think about this?","files":null}]}