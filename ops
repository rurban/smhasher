{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1532628770,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDExMjg2NTI4NQ=="},"nonce":"6R9NV31+2NRqtQpOjWbvH4J/WvE=","target":"ac2e449d66021dbe2a39756e456094062f2c846c4f712b872de0aeaa1ff85443","message":"I have a fork from some time in late 2015, which I used to add a c implementation of metrohash and a version with some optimizations for shorter keys. I kept the fork after the pull request was accepted upstream, here.\n\nI've now tried the latest master and, besides what i reported in #45 , I am seeing massive differences in reported performance. For cmetrohash64_1, I am seeing:\n\n```\n--- my old fork (old build) ---\n[[[ Speed Tests ]]]\n\nBulk speed test - 262144-byte keys\nAlignment  7 -  4.087 bytes/cycle - 11694.32 MiB/sec @ 3 ghz\nAlignment  6 -  4.087 bytes/cycle - 11694.35 MiB/sec @ 3 ghz\nAlignment  5 -  4.088 bytes/cycle - 11694.78 MiB/sec @ 3 ghz\nAlignment  4 -  4.087 bytes/cycle - 11691.98 MiB/sec @ 3 ghz\nAlignment  3 -  4.087 bytes/cycle - 11692.93 MiB/sec @ 3 ghz\nAlignment  2 -  4.088 bytes/cycle - 11695.01 MiB/sec @ 3 ghz\nAlignment  1 -  4.087 bytes/cycle - 11693.52 MiB/sec @ 3 ghz\nAlignment  0 -  4.214 bytes/cycle - 12057.15 MiB/sec @ 3 ghz\nAverage      -  4.103 bytes/cycle - 11739.26 MiB/sec @ 3 ghz\n\nSmall key speed test -    1-byte keys -    25.03 cycles/hash\nSmall key speed test -    2-byte keys -    22.72 cycles/hash\nSmall key speed test -    3-byte keys -    24.72 cycles/hash\nSmall key speed test -    4-byte keys -    23.93 cycles/hash\nSmall key speed test -    5-byte keys -    24.81 cycles/hash\nSmall key speed test -    6-byte keys -    31.58 cycles/hash\nSmall key speed test -    7-byte keys -    33.89 cycles/hash\nSmall key speed test -    8-byte keys -    24.33 cycles/hash\nSmall key speed test -    9-byte keys -    24.08 cycles/hash\nSmall key speed test -   10-byte keys -    24.59 cycles/hash\nSmall key speed test -   11-byte keys -    26.19 cycles/hash\nSmall key speed test -   12-byte keys -    24.89 cycles/hash\nSmall key speed test -   13-byte keys -    25.67 cycles/hash\nSmall key speed test -   14-byte keys -    32.87 cycles/hash\nSmall key speed test -   15-byte keys -    32.59 cycles/hash\nSmall key speed test -   16-byte keys -    25.20 cycles/hash\nSmall key speed test -   17-byte keys -    35.00 cycles/hash\nSmall key speed test -   18-byte keys -    33.86 cycles/hash\nSmall key speed test -   19-byte keys -    36.35 cycles/hash\nSmall key speed test -   20-byte keys -    33.22 cycles/hash\nSmall key speed test -   21-byte keys -    35.64 cycles/hash\nSmall key speed test -   22-byte keys -    34.87 cycles/hash\nSmall key speed test -   23-byte keys -    37.67 cycles/hash\nSmall key speed test -   24-byte keys -    28.85 cycles/hash\nSmall key speed test -   25-byte keys -    36.54 cycles/hash\nSmall key speed test -   26-byte keys -    35.79 cycles/hash\nSmall key speed test -   27-byte keys -    37.79 cycles/hash\nSmall key speed test -   28-byte keys -    36.27 cycles/hash\nSmall key speed test -   29-byte keys -    36.64 cycles/hash\nSmall key speed test -   30-byte keys -    36.64 cycles/hash\nSmall key speed test -   31-byte keys -    36.45 cycles/hash\nAverage                                    29.959 cycles/hash\n---\n\n--- my old fork (new build) ---\n[[[ Speed Tests ]]]\n\nBulk speed test - 262144-byte keys\nAlignment  7 -  4.282 bytes/cycle - 12252.21 MiB/sec @ 3 ghz\nAlignment  6 -  4.282 bytes/cycle - 12250.16 MiB/sec @ 3 ghz\nAlignment  5 -  4.282 bytes/cycle - 12251.42 MiB/sec @ 3 ghz\nAlignment  4 -  4.282 bytes/cycle - 12251.76 MiB/sec @ 3 ghz\nAlignment  3 -  4.282 bytes/cycle - 12251.84 MiB/sec @ 3 ghz\nAlignment  2 -  4.283 bytes/cycle - 12253.69 MiB/sec @ 3 ghz\nAlignment  1 -  4.283 bytes/cycle - 12253.13 MiB/sec @ 3 ghz\nAlignment  0 -  4.477 bytes/cycle - 12808.42 MiB/sec @ 3 ghz\nAverage      -  4.307 bytes/cycle - 12321.58 MiB/sec @ 3 ghz\n\nSmall key speed test -    1-byte keys -    28.09 cycles/hash\nSmall key speed test -    2-byte keys -    28.04 cycles/hash\nSmall key speed test -    3-byte keys -    23.64 cycles/hash\nSmall key speed test -    4-byte keys -    22.84 cycles/hash\nSmall key speed test -    5-byte keys -    23.91 cycles/hash\nSmall key speed test -    6-byte keys -    25.69 cycles/hash\nSmall key speed test -    7-byte keys -    43.28 cycles/hash\nSmall key speed test -    8-byte keys -    27.13 cycles/hash\nSmall key speed test -    9-byte keys -    23.84 cycles/hash\nSmall key speed test -   10-byte keys -    23.90 cycles/hash\nSmall key speed test -   11-byte keys -    23.87 cycles/hash\nSmall key speed test -   12-byte keys -    23.09 cycles/hash\nSmall key speed test -   13-byte keys -    25.49 cycles/hash\nSmall key speed test -   14-byte keys -    26.53 cycles/hash\nSmall key speed test -   15-byte keys -    27.38 cycles/hash\nSmall key speed test -   16-byte keys -    26.85 cycles/hash\nSmall key speed test -   17-byte keys -    28.03 cycles/hash\nSmall key speed test -   18-byte keys -    28.09 cycles/hash\nSmall key speed test -   19-byte keys -    28.64 cycles/hash\nSmall key speed test -   20-byte keys -    28.61 cycles/hash\nSmall key speed test -   21-byte keys -    28.78 cycles/hash\nSmall key speed test -   22-byte keys -    29.31 cycles/hash\nSmall key speed test -   23-byte keys -    29.46 cycles/hash\nSmall key speed test -   24-byte keys -    26.75 cycles/hash\nSmall key speed test -   25-byte keys -    29.50 cycles/hash\nSmall key speed test -   26-byte keys -    30.41 cycles/hash\nSmall key speed test -   27-byte keys -    31.03 cycles/hash\nSmall key speed test -   28-byte keys -    30.18 cycles/hash\nSmall key speed test -   29-byte keys -    31.50 cycles/hash\nSmall key speed test -   30-byte keys -    32.22 cycles/hash\nSmall key speed test -   31-byte keys -    40.30 cycles/hash\nAverage                                    27.386 cycles/hash\n---\n\n--- master ---\n[[[ Speed Tests ]]]\n\nBulk speed test - 262144-byte keys\nAlignment  7 -  4.284 bytes/cycle - 12255.87 MiB/sec @ 3 ghz\nAlignment  6 -  4.283 bytes/cycle - 12253.74 MiB/sec @ 3 ghz\nAlignment  5 -  4.283 bytes/cycle - 12254.33 MiB/sec @ 3 ghz\nAlignment  4 -  4.284 bytes/cycle - 12256.09 MiB/sec @ 3 ghz\nAlignment  3 -  4.283 bytes/cycle - 12254.51 MiB/sec @ 3 ghz\nAlignment  2 -  4.284 bytes/cycle - 12255.59 MiB/sec @ 3 ghz\nAlignment  1 -  4.283 bytes/cycle - 12254.99 MiB/sec @ 3 ghz\nAlignment  0 -  4.500 bytes/cycle - 12875.79 MiB/sec @ 3 ghz\nAverage      -  4.311 bytes/cycle - 12332.61 MiB/sec @ 3 ghz\n\nSmall key speed test -    1-byte keys -    25.00 cycles/hash\nSmall key speed test -    2-byte keys -    25.00 cycles/hash\nSmall key speed test -    3-byte keys -    31.00 cycles/hash\nSmall key speed test -    4-byte keys -    25.00 cycles/hash\nSmall key speed test -    5-byte keys -    30.00 cycles/hash\nSmall key speed test -    6-byte keys -    30.00 cycles/hash\nSmall key speed test -    7-byte keys -    36.00 cycles/hash\nSmall key speed test -    8-byte keys -    35.00 cycles/hash\nSmall key speed test -    9-byte keys -    40.00 cycles/hash\nSmall key speed test -   10-byte keys -    40.00 cycles/hash\nSmall key speed test -   11-byte keys -    46.00 cycles/hash\nSmall key speed test -   12-byte keys -    40.00 cycles/hash\nSmall key speed test -   13-byte keys -    45.88 cycles/hash\nSmall key speed test -   14-byte keys -    46.00 cycles/hash\nSmall key speed test -   15-byte keys -    52.00 cycles/hash\nSmall key speed test -   16-byte keys -    39.00 cycles/hash\nSmall key speed test -   17-byte keys -    45.00 cycles/hash\nSmall key speed test -   18-byte keys -    45.00 cycles/hash\nSmall key speed test -   19-byte keys -    50.46 cycles/hash\nSmall key speed test -   20-byte keys -    45.00 cycles/hash\nSmall key speed test -   21-byte keys -    50.00 cycles/hash\nSmall key speed test -   22-byte keys -    50.99 cycles/hash\nSmall key speed test -   23-byte keys -    56.00 cycles/hash\nSmall key speed test -   24-byte keys -    45.00 cycles/hash\nSmall key speed test -   25-byte keys -    50.00 cycles/hash\nSmall key speed test -   26-byte keys -    50.82 cycles/hash\nSmall key speed test -   27-byte keys -    56.00 cycles/hash\nSmall key speed test -   28-byte keys -    51.00 cycles/hash\nSmall key speed test -   29-byte keys -    56.00 cycles/hash\nSmall key speed test -   30-byte keys -    57.00 cycles/hash\nSmall key speed test -   31-byte keys -    62.00 cycles/hash\nAverage                                    43.747 cycles/\n---\n```\n\nI started going through the 100 or so commits before now and then to try to figure out where this comes from, but finally decided it was quicker to ask ;)\n\nAs you can see, increase in throughput is the same for my old snapshot and current master if built with my current gcc 8.1.1. At least that's where it looks to be coming from. The difference in cycles/hash must be a result of something introduced since then. Has the way you count cycles fundamentally changed?","files":null},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1532586461,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQwNzk5MDY5Mw==","github-url":"https://github.com/rurban/smhasher/issues/46#issuecomment-407990693"},"nonce":"Ywh8ywjGonzluiMI2b5hXXvTMJE=","message":"\u003e On Jul 26, 2018, at 5:37 AM, Paul G \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e I have a fork from some time in late 2015, which I used to add a c implementation of metrohash and a version with some optimizations for shorter keys. I kept the fork after the pull request was accepted upstream, here.\n\u003e \n\u003e I've now tried the latest master and, besides what i reported in #45 , I am seeing massive differences in reported performance. For cmetrohash64_1, I am seeing:\n\u003e \n\u003e --- my old fork (old build) ---\n\u003e Average 29.959 cycles/hash\n\u003e \n\u003e --- my old fork (new build) ---\n\u003e Average 27.386 cycles/hash\n\u003e \n\u003e --- master ---\n\u003e Average 43.747 cycles/\n\u003e \n\u003e I started going through the 100 or so commits before now and then to try to figure out where this comes from, but finally decided it was quicker to ask ;)\n\u003e \n\u003e As you can see, increase in throughput is the same for my old snapshot and current master if built with my current gcc 8.1.1. At least that's where it looks to be coming from. The difference in cycles/hash must be a result of something introduced since then. Has the way you count cycles fundamentally changed?\n\nYes, the benchmarking method was improved since then.\nThis must be the explanation.","files":null}]}