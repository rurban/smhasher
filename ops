{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":6,"timestamp":1637486513,"metadata":{"github-id":"UCE_lAHOARWYbc4_I8otziayc7Y"},"nonce":"Yd3KSUDMGGK8kMo7u/VylkJme0g=","target":"271bfe6d97bcbb276aa1ffdc5b37516e074b147c393a38066913a1510b799676","message":"It's my answer to wyhash. It may be a bit slower than wyhash, but structurally it's much more reliable, should not have any \"bad seeds\". Unusable for PerlinNoise with seed \u003e 32-bits. Otherwise, it seems to pass all SMHasher tests.\n\nhttps://github.com/avaneev/komihash","files":null},{"type":6,"timestamp":1637496291,"metadata":{"github-id":"UCE_lAHOARWYbc4_I8otziay6P4"},"nonce":"PRce/ZkpYSsn0mOMG+9D8SMPwMY=","target":"271bfe6d97bcbb276aa1ffdc5b37516e074b147c393a38066913a1510b799676","message":"It's my answer to wyhash. It may be a bit slower than wyhash, but structurally it's much more reliable, should not have any \"bad seeds\". Unusable for PerlinNoise with seed \u003e 32-bits. Other than that, it seems to pass all SMHasher tests.\n\nhttps://github.com/avaneev/komihash","files":null}]}