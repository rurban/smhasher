{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":1,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1600425975,"metadata":{"github-id":"MDU6SXNzdWU3MDQyODA3MTI=","github-url":"https://github.com/rurban/smhasher/issues/159","origin":"github"},"nonce":"po7tMooKi3yEq6oAgi7DYK8PKz4=","title":"PRVHASH 2.22","message":"Hello! I've updated PRVHASH to v2.22 - now the raw speed of `prvhash42` is a lot faster, it is also still fast when used as 32-bit table hash. Other hash lengths are irrelevant for tables anyway. However, both `prvhash42` and `prvhash42s` now require scratch pad bytes in Hash pointer: imposed after extensive research; this way the \"space\" of random number generator is exponentially larger. This isn't important for short strings, but when hashing gigabytes of data this is important.\n\n32-bit hashes do not require scratch pad, but other hash lengths should now be acquired this way:\n```\n\tconst int hl = 8;\n\tuint8_t Tmp[ hl * 2 ];\n\tprvhash42( (const uint8_t*) key, len, Tmp, hl, seed, 0 );\n\tmemcpy( out, Tmp, hl );\n```\n\nhttps://github.com/avaneev/prvhash","files":null}]}