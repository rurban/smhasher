{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1573735263,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMwOTA1NTExNg=="},"nonce":"p1RMi1lM3EFD36ODmfMklhYlDIk=","target":"c610226f1e1b6f488c17de6e3e3b6f1bcdf7a1eb94f2b5daab18afefe3e4a2b3","message":"Realistic hashes and hashmaps do not know the len at runtime. Knowing the alignment is ok, but knowing the seed or len is not ok. The compiler does then optimize away costly runtime branches or switches.\n\nEnsure that the len in the two speedtests are not const, known to the compiler. E.g. wyhash was found to be much slower than xxh3 with runtime len, because the len switch was optimized away","files":null},{"type":5,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1573735268,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI3OTg5MDI3MjY="},"nonce":"GDF+90k6uHj7D3KtVoCdqdh7eE8=","added":["bug"],"removed":[]},{"type":2,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1579367093,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mjk2MDMzNjA4Mw=="},"nonce":"rPMf3I1qNAgy6mpYioaPijjJQBI=","title":"check speed tests against volatile len","was":"check speed tests against volatile len"},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1579621087,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NjczOTEyOA==","github-url":"https://github.com/rurban/smhasher/issues/85#issuecomment-576739128"},"nonce":"YkJm/lhIk4hX66utiwTn04CFC+0=","message":"looked at the assembly. all hash calls in the speed tests are indirect, which is even worse. re benchmakring it's fair, but real world usage not. at least the len problem is not existing there.","files":null},{"type":4,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1579621088,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50Mjk2NjY4NzYyNA=="},"nonce":"NjckNLcriZB+5gBWZk5FpUXl9iI=","status":2}]}