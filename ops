{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698083,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1ODIyNDEzOA==","github-url":"https://github.com/rurban/smhasher/issues/87#issuecomment-558224138"},"nonce":"6V4z2EFvayA4VGhSPEP5tEzrJYI=","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. \nIt involves changes in the worst 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto deals with weak keys or timing, the state is fixed.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698154,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc1NzY3MA=="},"nonce":"acyEWxmSUrzQMd0Ct8U6iqkF0SI=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. \nIt involves changes in the worst 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto deals with weak keys or timing, the state is fixed. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698197,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc1ODE3NQ=="},"nonce":"V0aYOxLZMvDON8WfcbMYnB+WKjM=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits.\n\nIt involves changes in the worst 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto deals with weak keys or timing, the state is fixed. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698307,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc1OTQ2MA=="},"nonce":"hUhZGh69At1CytIDy/Kqe1Foji0=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits.\n\nIt involves changes in the worst 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698347,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc1OTg4OQ=="},"nonce":"orzLH83KeA0akUk7hVR94x9Q+Eo=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits.\n\nIt involves changes in the first 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698394,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2MDQ1Nw=="},"nonce":"7zqt4BxYHGFgO6ctzHNRIZ19NqM=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits.\n\nIt involves changes in the first 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698450,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2MTE5OQ=="},"nonce":"bmaP2154HV4xQ8VkS09J4p6zugs=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits.\n\nIt involves changes in the first 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698469,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2MTM4MQ=="},"nonce":"D1LcqsxYEe5nIWHdv8R4iipfpvg=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits.\n\nIt involves changes in the first 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698542,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2MjEyOA=="},"nonce":"GPG57o39N3q8i8Umhg2vvIBQsJ4=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits.\n\nIt involves changes in the first 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698650,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2MzQ0MQ=="},"nonce":"Ht7Imzv4uRYQil+3iMYGyui0GUg=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability. For now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nIt involves changes in the first 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698674,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2Mzc5NQ=="},"nonce":"GaGhnu5P3cxmjs7MPkwgr00q7TA=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698765,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2NDk0Ng=="},"nonce":"9s5G3KCC0OyE4WqfM5L+S6WfU5g=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698997,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2NzY0NA=="},"nonce":"FgskckIlQf+zyNzcou1N97ZplxQ=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574699042,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2ODEyOQ=="},"nonce":"0cV7+sCMT7BFWEyapkV6xidaDzs=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that. The other idea with crypto test is to leave out the seeding and related tests.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574699091,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2ODY5Mw=="},"nonce":"EEjmKtsVf53IwyNnyQ/jYJUGKiU=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that. The other idea with crypto tests is to leave out the seeding and related tests.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574699184,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc2OTgxOQ=="},"nonce":"wyJH22uVzVhLIbbWVeebGenzK60=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that. The other idea with crypto tests is to leave out the seeding and related tests.  This would e.g. need to change MomentChi2 from iterating the seeds to the key, and all the new collision tests.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574699260,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc3MDgxMA=="},"nonce":"WlGB2yLZtOwc/Kzc/JQZauqRY8M=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"I'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first, could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that. The other idea with crypto tests is to leave out the seeding and related tests.  This would e.g. need to change MomentChi2 from iterating the seeds to the key, and all the new collision tests.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574699360,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc3MjA1Mw=="},"nonce":"YO7IjF2tyiA6GPjeCe/35DE6FMg=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"This is about the results of the new crypto branch. And it's new CRYPTO paragraph in the docs.\n\nI'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first, could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that. The other idea with crypto tests is to leave out the seeding and related tests.  This would e.g. need to change MomentChi2 from iterating the seeds to the key, and all the new collision tests.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574699408,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDc3MjYxMg=="},"nonce":"fcnizZlV5s3OFAnQFhGf+kX3iiM=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"This is about the results of the new crypto branch. And it's new CRYPTO paragraph in the docs. https://github.com/rurban/smhasher/commit/25dd4a857038084f09202e0e055ed3a3bc6f17f0\n\nI'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first, could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that. The other idea with crypto tests is to leave out the seeding and related tests.  This would e.g. need to change MomentChi2 from iterating the seeds to the key, and all the new collision tests.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574702068,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMxNDgwMjk4MA=="},"nonce":"0TRzhmvFyCbb59Mzv6ISBClVKdE=","target":"af4a91a9f4142a59c99a3e7d5879a0a454c6f386180e1ff8e7ac4098d0e8499c","message":"This is about the results of the new crypto branch. And it's new CRYPTO paragraph in the docs. https://github.com/rurban/smhasher/tree/crypto#crypto\n\nI'm sure about the failing tests and the weakness, but I'm not sure about the cryptographic applicability.  It involves changes in the first 32bit state word (the seed), which is not used and not tested in crypto. In my understanding weak state mixings point to a weak function. Crypto just deals with weak keys or timing, the state is fixed. We are testing the reverse here. Anyway, the functions itself are weak, as state changes should affect the function quality as measured.\nMaybe Yann's new collision tests (from March) are buggy, but so far they stood the test of time very well.\n\nFor now it's not recommended to use them as hash table functions when capped to lower bits. When using them with all bits it should be still strong, but maybe the GRU or NSA are exploiting low bit weaknesses already.\n\nAnd the NIST test suite needs to be open source. Otherwise all their claims and recommendations are not trustworthy. In my tests blake2b-256 was far better than Keccak-256.\n\nBetter seed spread-out to all state words, not just a part of the first, could definitely help some failing tests. Or longer seeds, of the same size as the state. But then we would need to filter out bad initial states, which could corrupt the function even more. That's why I didn't do that. The other idea with crypto tests is to leave out the seeding and related tests.  This would e.g. need to change MomentChi2 from iterating the seeds to the key, and all the new collision tests.","files":null},{"type":5,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698812,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI4Mjg3NDIwMTM="},"nonce":"xauRes1+dkRoHbjG8I3yw+0TFw0=","added":["docs"],"removed":[]},{"type":5,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1574698827,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI4Mjg3NDI5OTY="},"nonce":"cUVgue2+wvokc0IwTJVE1LRPV94=","added":["question"],"removed":[]}]}