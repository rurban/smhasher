{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1590353796,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYzMzI5ODM2MA==","github-url":"https://github.com/rurban/smhasher/issues/128#issuecomment-633298360"},"nonce":"vZgyCagtU8BAZwFDshN7+iDhiyU=","message":"\u003e It's expensive because each seed value is generating and compiling a brand new compression function.\n\nOh, now that's interesting! Like the hash jitter.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1590389409,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzc0MzI0ODM4"},"nonce":"hcP3P8N1N1x4Mt6QOo0CjfI1Df8=","target":"bb6900ed476b0fe0cb4d293e055a822025a622bf7da0b097932388d8fafa7a48","message":"\u003e It's expensive because each seed value is generating and compiling a brand new compression function.\n\nOh, now that's interesting! Like the hash jitter.  So the recomputation is required for every seed change (which is done constantly to test qualities), but should not affect timing. Something like a `Seed_Init` hook, analog to `Hash_Init()`","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1590394777,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzc0MzQyOTE5"},"nonce":"ls5kaVxK4r5MVgZIQsB4LlEHiEs=","target":"bb6900ed476b0fe0cb4d293e055a822025a622bf7da0b097932388d8fafa7a48","message":"\u003e It's expensive because each seed value is generating and compiling a brand new compression function.\n\nOh, now that's interesting! Like the hash jitter.  So the recomputation is required for every seed change (which is done constantly to test qualities), but should not affect timing. Something like a `Seed_init` hook, analog to `Hash_init()`. \n\nI'm trying now to move the hashx_init step moving into a seperate function, to create it only once. Some tests need to be skipped then.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1590396520,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzc0MzQ4NTgx"},"nonce":"QevFt3q/QvI6JHLW1OLRLjKTITI=","target":"bb6900ed476b0fe0cb4d293e055a822025a622bf7da0b097932388d8fafa7a48","message":"\u003e It's expensive because each seed value is generating and compiling a brand new compression function.\n\nOh, now that's interesting! Like the hash jitter.  So the recomputation is required for every seed change (which is done constantly to test qualities), but should not affect timing. Something like a `Seed_init` hook, analog to `Hash_init()`. \n\nI'm trying now to move the hashx_init step moving into a seperate function, to create it only once. Some tests need to be skipped then. pfHash hash needs to be assigned a lambda.","files":null},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1598348864,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3OTkyMzY3OQ==","github-url":"https://github.com/rurban/smhasher/issues/128#issuecomment-679923679"},"nonce":"WN/QWgA9UqYg80yz6EzGSgAVOW4=","message":"Trying again. Also useful for all streaming or crypto hashes with expensive seeding.\nE.g. all the collision tests, but esp. the Hashmap benchmark, which realistucally uses the very same seed throughout.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1598354051,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzk1NTIwMTc5"},"nonce":"Bddam2w2cqnsAeRrS4HW7YSA5HU=","target":"8b7aaf9f2a3013b2d1d9f2d5ac2f0cd2edee27798863de57c445effe11924d6a","message":"Trying again. Also useful for all streaming or crypto hashes with expensive seeding.\nE.g. all the collision tests, but esp. the Hashmap benchmark, which realistically uses the very same seed throughout.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1598354072,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzk1NTIwMjUy"},"nonce":"szF5xMgGC6oHLhXHyVAZObQjqyE=","target":"8b7aaf9f2a3013b2d1d9f2d5ac2f0cd2edee27798863de57c445effe11924d6a","message":"Trying again. Also useful for all streaming or crypto hashes with expensive seeding.\nE.g. all the collision tests, but esp. the Hashmap benchmark, which realistically uses the very same seed throughout. Most other tests just use seed 0 throughout.","files":null}]}