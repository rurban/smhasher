{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":1,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1434382602,"metadata":{"github-id":"MDU6SXNzdWU4ODQ2MjE5Mw==","github-url":"https://github.com/rurban/smhasher/issues/5","origin":"github"},"nonce":"Hpfzk1OK+10I3wf/S5nKh4ZrIsQ=","title":"Add some more hash funcs","message":"https://code.google.com/p/crcutil/ has some efficient (in fact the currently most efficient) funcs. multiword_128_64_gcc_amd64_sse2\n\nhttp://www.strchr.com/hash_functions lists some FNV1 based improvements and more, with a good quality check from the dragon book. \nhttps://github.com/gpnuma/fsbench-density.git could be imported as submodule.\nesp. Jesteress, Meiyan, YoshimitsuTRIAD, Tesla, ...\nand they (fsbench) have also all the new secure hashes.\n\nCityHash32 (without seed, but can be added. I wrote one)\n\nfletcher2,4 from ZFS\n\nI wrote also the  metrohash64crc_1,2 variants, but with too many collisions in one test so far.\n\nsse4.2 run-time probing can be added into main, to see if the target can run the version which was configured.","files":null}]}