{"author":{"id":"ef11ab78f8eb46f13a7f7a9fd6542e1122505a7012e84ff39a5ae98abbc5839d"},"ops":[{"type":3,"author":{"id":"ef11ab78f8eb46f13a7f7a9fd6542e1122505a7012e84ff39a5ae98abbc5839d"},"timestamp":1473095183,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0NDc4NzM1MA==","github-url":"https://github.com/rurban/smhasher/issues/17#issuecomment-244787350"},"nonce":"CdBFze4gJkP34dDPr5RNJ7opuAU=","message":"Thanks for the comments.\n\n\u003e You can never trust the 32bit hash, you always have to compare the length and full keys with strcmp or better memcmp.\n\nThis is indeed the case and why hash tables with non-random keys or flaky characteristics should not be used on untrusted data.\n\nAnd it's the reason why Perl, Python, Ruby etc changed from DJB33*, FNV1 and other easy to attack hashes to SipHash. In your opinion, they could have picked any hash function (e.g. Murmur3) with a random seed?\n\nThe attack on hash tables was based on easily being able to generate collisions, causing the http header hash table to hog the CPU memcmp'ing the key data while using very little network bandwidth.\n\n\u003e You don't attack the hash function per se, you attack the hash table state to get the seed and then produce the collisions brute force.\n\nIsn't this the reason why difficulty of key recovery is a characteristic of a good, secure hash function?\n\n\u003e Crypto analysis on a 32bit hash function for seed recovery is not needed because you can trivially brute force it or solve it with a simple solver.\n\nYou imply that generating collisions is trivial, and not dependent on the hash function. Can you link to an attack demonstrating this?\n\nThe satcoin example was intriguing, are you aware of this being applied to hash table DDoSing? \n\n\u003e But here we are only talking about hash function security, and those silly and harmful claims need to be debunked.\n\nI guess this was why I opened this issue. The readme makes claims that counter research papers on the subject but don't cite any sources or give any  background. You seem to be convinced that hash function security is a non-issue but could you back this up so it would be convincing to others too?\n\nYou seem to have a wealth of knowledge on the topic, I would appreciate if you'd augment the readme with some references on the topic.\n\nThanks.","files":null}]}