{"author":{"id":"865bf723a9214027b17304fed4f98ae83e229e6421297d65bb8ed683dbeaeb5d"},"ops":[{"type":1,"author":{"id":"865bf723a9214027b17304fed4f98ae83e229e6421297d65bb8ed683dbeaeb5d"},"timestamp":1552634219,"metadata":{"github-id":"MDU6SXNzdWU0MjEzODM4MDc=","github-url":"https://github.com/rurban/smhasher/issues/56","origin":"github"},"nonce":"GN8MMTr0lhk2nFnhqrmEhRoKE5I=","title":"Running extended tests","message":"I've been using this great fork of SMHasher to validate a new hash algorithm,\nand in the process, I found it useful to push the tests to higher limits.\n\nThe reason is, most tests are designed around \"small\" input length, in order to scout a tractable search space. Unfortunately, many modern hash algorithms feature different code paths depending on the input size. As a consequence, path for large input length is not stressed enough, which makes it possible to \"pass\" the tests, while they were effectively skipped.\n\nAnother factor is that computing capacity has increased a lot since SMHasher initial release, and it's now less problematic to run and analyse many more results per test.\n\nI've implemented these changes in a fork at [Cyan4973/SMHasher](https://github.com/Cyan4973/smhasher). I was wondering if you would be interested in such changes, and if yes, if you have some PR-related requirements, for example around patch size.","files":null}]}