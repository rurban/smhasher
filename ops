{"author":{"id":"1aa69c8b8ebd92a4a4c0f909d553382125f4847ec1022458cf42fb6fc7dca78f"},"ops":[{"type":1,"author":{"id":"1aa69c8b8ebd92a4a4c0f909d553382125f4847ec1022458cf42fb6fc7dca78f"},"timestamp":1605498812,"metadata":{"github-id":"MDU6SXNzdWU3NDM0NDgzNzk=","github-url":"https://github.com/rurban/smhasher/issues/168","origin":"github"},"nonce":"YjaAnv/a7QDpgv9dVehlhLmrXRM=","title":"Blake3_c seed inclusion error (might be causing the seeding issues)","message":"https://github.com/rurban/smhasher/blob/c91d5385d581ce21629a5b677e0a36cac2378ef6/Hashes.h#L978\n\nExisting\n```C\ninline void blake3c_test ( const void * key, int len, unsigned seed, void * out )\n{\n    blake3_hasher hasher;\n    blake3_hasher_init (\u0026hasher);\n    // mix-in seed. key0 is not enough to pass MomentChi2. but even mixing all does not help\n    //for (int i = 0; i \u003c 8; i++)\n    //  hasher.key[i] ^= (uint32_t)seed;\n    hasher.key[0] ^= (uint32_t)seed;\n    blake3_hasher_update (\u0026hasher, (uint8_t*)key, (size_t)len);\n    blake3_hasher_finalize (\u0026hasher, (uint8_t*)out, BLAKE3_OUT_LEN);\n}\n```\n\nThe code tries to init the seed by updating `hasher.key[0]`. The problem is that `hasher.key[0]` is only used to update `hasher.chunk.cv[0]`, and `cv` is used internally in the hash function.\n\n```C\nblake3_hasher_init (\u0026hasher);\n// Calls: hasher_init_base(self, IV, 0)\n// Which calls: chunk_state_init(\u0026self-\u003echunk, key, flags)\n// Which calls: memcpy(self-\u003ecv, key, BLAKE3_KEY_LEN)\n```\n\nThe code needs to be one of the following (I'm writing it in GitHub, so might not be correct C).\n\n```C\n//  hasher.key[i] ^= (uint32_t)seed;\nhasher.key[0] ^= (uint32_t)seed;\nhasher.chunk.cv[0] ^= (uint32_t)seed;  // Added\nblake3_hasher_update (\u0026hasher, (uint8_t*)key, (size_t)len);\n```\n\nOr else\n\n```C\ninline void blake3c_test ( const void * key, int len, unsigned seed, void * out )\n{\n    uint32_t seed_key[8] = {0x6A09E667 ^ (uint32_t )seed, 0xBB67AE85, 0x3C6EF372,\n                               0xA54FF53A, 0x510E527F, 0x9B05688C,\n                               0x1F83D9AB, 0x5BE0CD19};  // Copied the default IV from blake3_impl.h\n    blake3_hasher hasher;\n    blake3_hasher_init_keyed(\u0026hasher, (uint8_t*)seed_key);  // Changed to the KEYED variant\n\n    blake3_hasher_update (\u0026hasher, (uint8_t*)key, (size_t)len);\n    blake3_hasher_finalize (\u0026hasher, (uint8_t*)out, BLAKE3_OUT_LEN);\n}\n```","files":null}]}