{"author":{"id":"d07c3cbf5e90d1cc3232af8363e485f997b6874d683383a10bff9f7e689a1d9a"},"ops":[{"type":6,"timestamp":1668040496,"metadata":{"github-id":"UCE_lAHOARWYbc5WAl7tzjbrfIU"},"nonce":"0sZy8cnByCM1p1xZqlb5w3cfOps=","target":"1272d6cdd6dc6b83e9584449e961356214a1afd37f829a80273ac85e3da857c2","message":"In SpeedTest.cpp functions \\`timehash()', \\`timehash_small()', \\`HashMapSpeedTest()' use \\`timer_start()', \\`timer_end()' which on 32-bit linux use assembler hacked substitute os \\`rdtsc()' (defined in Platform.h).\nGCC fails to compile it with following error:\n\n```\nPlatform.h: In function ‘int64_t timehash(pfHash, const void*, int, int)\n’:\nPlatform.h:179:39: error: PIC register clobbered by ‘%ebx’ in ‘asm’\n        \"%eax\", \"%ebx\", \"%ecx\", \"%edx\");\n                                       ^\nPlatform.h:204:39: error: PIC register clobbered by ‘%ebx’ in ‘asm’\n        \"%eax\", \"%ebx\", \"%ecx\", \"%edx\");\n                                       ^\n```\n([Full error log](https://paste.ee/p/AG8Pf))\n\nwhich is good as you know there is something wrong with it. Clang doesn't even warn about that but generated program crashes with 'illegal instruction'.\n\n\nWhen this calls are replaced with rdtsc() it works.\n\n```diff\n--- SpeedTest.cpp~\t2022-11-03 10:04:58.000000000 +0100\n+++ SpeedTest.cpp\t2022-11-10 00:57:53.000000000 +0100\n@@ -169,11 +169,11 @@ NEVER_INLINE int64_t timehash ( pfHash h\n   volatile int64_t begin, end;\n   uint32_t temp[16];\n \n-  begin = timer_start();\n+  begin = rdtsc();\n   \n   hash(key,len,seed,temp);\n   \n-  end = timer_end();\n+  end = rdtsc();\n   \n   return end - begin;\n }\n\n```\n(All changes are [here](https://paste.ee/p/ZCSHt) in case you wanted to have a look)\nIt's unnecessary to use assembler version that is wrong when there is rdtsc() available in compiler (gcc-4.7+, clang-3.8+, mingw-gcc-4.6+; afaic). If not then at least it could be corrected. I don't undertake this as inline assembler is difficult and tricky, as here.\n[Here](https://stackoverflow.com/questions/9887839/how-to-count-clock-cycles-with-rdtsc-in-gcc-x86) some more info I used to understand it, maybe you find it useful.","files":null}]}