{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":5,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1573207635,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI3ODIzNjM1Njg="},"nonce":"YpCb8DtP+FSaP4JyFex/WVK68ls=","added":["enhancement"],"removed":[]},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1573208068,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1MTUxNTc1Ng==","github-url":"https://github.com/rurban/smhasher/issues/76#issuecomment-551515756"},"nonce":"sScXpB3I3aGekU7JHaGCcrbuSX4=","message":"@wangyi-fudan: \n\u003e I found the problem of difference between SMHasher and real enviroment:\n\u003e when len is fixed, wyhash is faster, while len=atoi(av[1]), xxh3 is faster.\n\ncompilers are unfortunately pretty good in detecting constexpr (len) and optimize on them. in my memcmp variants I got 70% benchmark speedups in const len on newer clang, but in that case memcmp with const len is petty common. In our case not. \nAlso alignment is known at compile-time, but malloc'ed keys are also properly aligned, so that's fair.\nwith inlining it's even worse, but in our case we really want to inline the short ones.\nwill check how to trick clang/gcc into omitting this optim for const len.","files":null}]}