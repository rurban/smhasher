{"author":{"id":"6eee5efae6ac4c22551887b8f66b9bbb345d45511a0675f837fab3c1b02acdca"},"ops":[{"type":3,"author":{"id":"6eee5efae6ac4c22551887b8f66b9bbb345d45511a0675f837fab3c1b02acdca"},"timestamp":1532627041,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQwODE3NzkyOQ==","github-url":"https://github.com/rurban/smhasher/issues/45#issuecomment-408177929"},"nonce":"oW4BQ9dsfZcDzR7e705YqoONNYE=","message":"While I'm sure this is an interesting discussion (I see no value in supporting MSVC and personally have no use for anything other than x64), my issue is very specific - I'd like to know what exactly happened in the part of the commit that replaces opt_cmetrohash64_1.c and why. My hope in contributing the cmetrohash etc implementations was that they would continue to work and remain comparable to the state-of-the-art in future. Now one is broken and, even if it were runnable, works entirely differently. Completely changing an implementation removing optimizations is hardly the right way to handle build issues, no?\n\nIn that particular respect, the solution is either to back out the change to opt_cmetrohash64_1.c and, if necessary for compatibility, ifdef cmetrohash64_1o out on anything besides gcc - or leave everything as is meaning in future I should maintain hash functions I care about outside the tree in my own fork.\n\n@leo-yuriev Можно ответить по-русски, если Вам так легче.","files":null}]}