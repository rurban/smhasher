{"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"ops":[{"type":5,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1600431025,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM3ODIzMTk5Mzg="},"nonce":"H9c/17V5mWbf6HgNi4Im/4Lo+aw=","added":["enhancement"],"removed":[]},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1600692217,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5NjA4ODk0Ng==","github-url":"https://github.com/rurban/smhasher/issues/159#issuecomment-696088946"},"nonce":"XMvy65HY34d2dYLGeWnjJvu6Bmw=","message":"The problem is that prvhash42_128 is now invalid, and prvhash42_64 also for 32bit CPU's.\nWe only allocate 128 bit hashes for 128.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1600692610,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDAxMzY1Nzgy"},"nonce":"s5ttp2iBbO7xia/0hGyaFJaN/DI=","target":"f5741d05a449526cb460c9f8a0a251da342b46b99c38708f13b870ad0e3664b8","message":"The problem is that prvhash42_128 and prvhash42_64 are now invalid, they access out Hash of bounds.","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1600693030,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDAxMzY3MjQ5"},"nonce":"3ULbEp3tUz4KWgZlAIE8ZmKFCtk=","target":"f5741d05a449526cb460c9f8a0a251da342b46b99c38708f13b870ad0e3664b8","message":"The problem is that prvhash42_128 and prvhash42_64 are now invalid, they access out Hash of bounds.\nIf I disable this 42s_final code it works:\n```\n\t/*if( ctx -\u003e hlm \u003e 4 )\n\t{\n\t\tfor( c = 0; c \u003c ctx -\u003e HashLen; c += 4 )\n\t\t{\n\t\t\t*(uint32_t*) ( ctx -\u003e Hash + c ) ^=\n\t\t\t\t*(uint32_t*) ( ctx -\u003e Hash + ctx -\u003e HashLen + c );\n\t\t}\n        }*/\n\n```","files":null},{"type":6,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1600693066,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDAxMzY3Mzk3"},"nonce":"pcF+FF9vynebSLGIvtrw9K7a2Qs=","target":"f5741d05a449526cb460c9f8a0a251da342b46b99c38708f13b870ad0e3664b8","message":"The problem is that prvhash42_128 and prvhash42_64 are now invalid, they access out Hash of bounds.\nIf I disable this 42s_final code it works:\n```\n\t/*if( ctx -\u003e hlm \u003e 4 )\n\t{\n\t\tfor( c = 0; c \u003c ctx -\u003e HashLen; c += 4 )\n\t\t{\n\t\t\t*(uint32_t*) ( ctx -\u003e Hash + c ) ^=\n\t\t\t\t*(uint32_t*) ( ctx -\u003e Hash + ctx -\u003e HashLen + c );\n\t\t}\n        }*/\n\n```\nand of course undo the hlm doubling in the 42s part","files":null},{"type":3,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1600763465,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5NjU4Mjk3MA==","github-url":"https://github.com/rurban/smhasher/issues/159#issuecomment-696582970"},"nonce":"Wt23eSFUcSC6qWI83TpIWN7g52A=","message":"Merged as 2.22a variant","files":null},{"type":4,"author":{"id":"ea8195bf30d85b36cadb8f08e79aa22a50e04d9a05d6d973c74da1c9f099555e"},"timestamp":1600763465,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50Mzc5MjA2MzkzNQ=="},"nonce":"xuHiL0UjTpd+9jDxn2huVosRT2Q=","status":2}]}