{"author":{"id":"382e0604a0cc648df6764230ea7ce0b626217738167eb2200238272b6c52e2a8"},"ops":[{"type":3,"author":{"id":"382e0604a0cc648df6764230ea7ce0b626217738167eb2200238272b6c52e2a8"},"timestamp":1572288374,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU0NzA5MTc1OQ==","github-url":"https://github.com/rurban/smhasher/issues/75#issuecomment-547091759"},"nonce":"KNEn6oTXl93by51Dlm2O8AMLVYY=","message":"Many thanks Yurii, this evening I have no time to put your variant into benches and run them, tomorrow night I will few spare hours will GLADLY play with your tweaked variant and will share it, feel free you yourself to share it...\n\n```\nFNV1A_Pippip_Yurii(char const*, unsigned int):\tFNV1A_Pippip(char const*, unsigned int):\n        mov     rax, QWORD PTR [rdi]\t\tmov     rax, QWORD PTR [rdi]\n        cmp     esi, 8         \t\t\tcmp     esi, 8\n        jbe     .L2         \t\t\tjbe     .L2\n        lea     eax, [rsi-1]         \t\tlea     ecx, [rsi-1]\n        shr     eax, 4         \t\t\txor     edx, edx\n        lea     edx, [8+rax*8]         \t\tshr     ecx, 4\n        sub     esi, edx         \t\tadd     ecx, 1\n        lea     rdx, [rdi+8+rax*8]         \tlea     eax, [0+rcx*8]\n        movabs  rax, -3750763034362895579       sub     esi, eax\n\t\t\t\t\t        movabs  rax, -3750763034362895579\n\t\t\t\t\t        movsx   rsi, esi\n\t\t\t\t\t        add     rsi, rdi\n.L3:.\t\t\t\t\t\tL4:\n        xor     rax, QWORD PTR [rdi]       \txor     rax, QWORD PTR [rdi+rdx*8]\n        add     rdi, 8         \t\t\timul    rax, rax, 591798841\n        imul    rax, rax, 591798841         \txor     rax, QWORD PTR [rsi+rdx*8]\n        xor     rax, QWORD PTR [rdi-8+rsi]      add     rdx, 1\n        imul    rax, rax, 591798841         \timul    rax, rax, 591798841\n        cmp     rdi, rdx         \t\tcmp     ecx, edx\n        jne     .L3         \t\t\tjg      .L4\n.L4: \t\t\t\t\t\t.L3:\n        mov     rdx, rax         \t\tmov     rdx, rax\n        shr     rdx, 32         \t\tshr     rdx, 32\n        xor     eax, edx         \t\txor     eax, edx\n        mov     edx,         \t\t\tmov     edx, eaxeax \n        shr     edx, 16         \t\tshr     edx, 16\n        xor     eax, edx         \t\txor     eax, edx\n        ret        \t\t\t\tret\n.L2: \t\t\t\t\t\t.L2:\n        movabs  rdx, -3750763034362895579       movabs  rdx, -3750763034362895579\n        mov     ecx, 8         \t\t\tmov     ecx, 8\n        sub     ecx, esi         \t\tsub     ecx, esi\n        sal     ecx, 3        \t\t\tsal     ecx, 3\n        sal     rax, cl         \t\tsal     rax, cl\n        shr     rax, cl        \t\t\tshr     rax, cl\n        xor     rax, rdx        \t\txor     rax, rdx\n        imul    rax, rax, 591798841        \timul    rax, rax, 591798841\n        jmp     .L4         \t\t\tjmp     .L3\n```","files":null},{"type":3,"author":{"id":"382e0604a0cc648df6764230ea7ce0b626217738167eb2200238272b6c52e2a8"},"timestamp":1572441914,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU0NzkwMDkyMA==","github-url":"https://github.com/rurban/smhasher/issues/75#issuecomment-547900920"},"nonce":"5cXX4SBTDnSaSIo1Tzl0Zn0C0D0=","message":"@hordi \nhttps://software.intel.com/en-us/forums/intel-moderncode-for-parallel-architectures/topic/824947","files":null}]}