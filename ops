{"author":{"id":"e157bef5b913129889bf0f749ce117e9e21ea8680628344c1940e51c472d3694"},"ops":[{"type":3,"author":{"id":"e157bef5b913129889bf0f749ce117e9e21ea8680628344c1940e51c472d3694"},"timestamp":1486192469,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNTEzMw==","github-url":"https://github.com/rurban/smhasher/issues/24#issuecomment-277425133"},"nonce":"ewIxxU7K5PZmYsvxDjOD0gAl4jw=","message":"\u003eThe abbrevated versions of MD5 and SHA1 are indeed doing horribly, means their lower 32bits are not worth using. This is normal and also known from PRF (pseudo random functions): The higher bits are always best, lower bits are pretty bad.\n\nthis is a big misunderstanding. some extremely simple hash functions, that employ only mul/add, are indeed collect entropy in their higher bits. anything more complex, like t1ha or xxh, mixes entropy over the entire result\n\ncryptohashes such as md4/md5/sha1 performs hundreds of mixing operations per input word and deliver results with highest quality of EVERY bit. I use 32-bit sha1 parts as measure of ideal hash quality and you can see that all 4 parts i tested provide the same great results, not worse than any other 32-bit hash:\n\nhttps://github.com/Bulat-Ziganshin/FARSH/blob/master/SMHasher/reports/sha1_32.txt\n\n\nThe same applies to other 64+ bit hashes, f.e. this is testing of 32-bit SpookyHash quarters:\n\nhttps://github.com/Bulat-Ziganshin/FARSH/blob/master/SMHasher/reports/Spooky32.txt\n\n\n\u003eThis is normal and also known from PRF (pseudo random functions): The higher bits are always best, lower bits are pretty bad.\n\nfuinally, PRF is just a hash function with parameter (seed). And hash quality doesn't depend on having the seed. The test you are referring to is just checked that 10-bit hash value can be discovered after 2^10 tries, that's not much surprise :)  And of course, it doesn't depend whether you use high or low hash bits","files":null}]}