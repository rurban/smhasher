{"author":{"id":"c3ed89b71774c232090aae9d596f04a34aa508024637803b2c588c2d8aa95519"},"ops":[{"type":1,"author":{"id":"c3ed89b71774c232090aae9d596f04a34aa508024637803b2c588c2d8aa95519"},"timestamp":1590339512,"metadata":{"github-id":"MDU6SXNzdWU2MjM5MDMxMTg=","github-url":"https://github.com/rurban/smhasher/issues/128","origin":"github"},"nonce":"obA+xbsJE6mnyJfLNhubUohmd3c=","title":"Hash functions with expensive seeding are not handled optimally","message":"I'm testing a custom hash function with very expensive seeding (100 000 cycles to change the seed). Once seeded, the hash function is very fast (~270 cycles/hash). SMHasher is changing the seed frequently, which makes it impossible to complete any tests. I had to resort to hardcoding the seed, which causes the hash function to fail 2 seed-related tests (Seed and PerlinNoise).\n\nIs there a better way to handle expensive seeding in the framework of SMHasher?","files":null}]}