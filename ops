{"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"ops":[{"type":3,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1597428451,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3NDE5NzY0Mg==","github-url":"https://github.com/rurban/smhasher/issues/134#issuecomment-674197642"},"nonce":"GPGhUy03laStOOVsY8+VRmBBUBM=","message":"Thank you. Well, something is indeed wrong. I'll try to fix the problem with prvhash82. Which compiler are you using which gives such poor int128 results?","files":null},{"type":3,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1597480244,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3NDM2ODM5MA==","github-url":"https://github.com/rurban/smhasher/issues/134#issuecomment-674368390"},"nonce":"Z7Aik4Whx/Gzg1GDoqhdUssnhi8=","message":"I have found an obvious bug in `prvhash82`, not related to the core function itself. I've also found an elegant solution to finalize hashing - \"impossible byte\". So, now both `prvhash82` and `prvhash42` should be re-tested, at version 2.6 now. Both functions now pass 32-,64-,128- and 256-bit tests. They are now also several instructions shorter. Thanks for your efforts with SMHasher! It helped me much to debug the hashing code.","files":null},{"type":3,"author":{"id":"656dd67b0f9bdf8bc451c83ff8f36ef959de2c8b4781d218d9958f9e71ef0639"},"timestamp":1597494659,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3NDM5MTAyOQ==","github-url":"https://github.com/rurban/smhasher/issues/134#issuecomment-674391029"},"nonce":"dlORlRjbDg6h/QG8xaQemod3KwM=","message":"I've just released verison 2.7 - it has twice the speed of version 2.6. v2.7 displays a bit worse biases overall as it's working at the edge of its possibilities now. I do not know how biases are important for irreversible function though.","files":null}]}